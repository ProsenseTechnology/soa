<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:app="http://xmlns.equitybank.co.ke/ESB/PS/Polaris/Adapter/ftp"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:eo="http://xmlns.equitybank.co.ke/ESB/EO/Parties/Customer/V1"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns oraxsl DVMFunctions BasicCredentialsUserFunction UUIDUserFunction IsUserInRoleFunction IsUserInGroupFunction XrefFunctions"
                xmlns:acceo="http://xmlns.equitybank.co.ke/ESB/EO/Accounts/Account/V1"
                xmlns:com="http://xmlns.equitybank.co.ke/ESB/EO/Common/V1"
                xmlns:ns1="http://xmlns.equitybank.co.ke/ESB/EO/Resilience/Biometric/V1"
                xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd"
                xmlns:ns0="http://xmlns.equitybank.co.ke/ESB/EO/Misc/File/V1">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../../../../ESBMetadata/ComponentLibrary/EnterpriseObjects/Parties/Customer/V1/CustomerEO.xsd"/>
        <oracle-xsl-mapper:rootElement name="ESBMsg"
                                       namespace="http://xmlns.equitybank.co.ke/ESB/EO/Parties/Customer/V1"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../../../Adapter/ftp/PRS_FTP_Adapter.xsd"/>
        <oracle-xsl-mapper:rootElement name="CustomerMasterFileInput"
                                       namespace="http://xmlns.equitybank.co.ke/ESB/PS/Polaris/Adapter/ftp"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [THU MAY 14 14:26:01 EAT 2015].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="filename"/>
  <xsl:template match="/">
    <app:CustomerMasterFileInput>
      <app:HeaderLine>
        <app:LineIdentifier>H</app:LineIdentifier>
        <app:FileName>
          <xsl:value-of select="$filename"/>
        </app:FileName>
        <app:Date>2015-05-12</app:Date>
        <!--app:FileName>
          <xsl:value-of select="concat(/eo:ESBMsg/eo:RqData/@actionCode,'_Feed_',xp20:format-dateTime(xp20:current-date(),'[Y0001][M01][D01][H01][M01][s01]'))"/>
        </app:FileName>
        <app:Date>
          <xsl:value-of select="xp20:format-dateTime(xp20:current-date(),'[Y0001][M01][D01]')"/>
        </app:Date-->
      </app:HeaderLine>
      <xsl:for-each select="/eo:ESBMsg/eo:RqData/eo:Customer">
        <app:DataLine>
          <app:LineIdentifier>D</app:LineIdentifier>
          <app:UnitID>
            <xsl:value-of select="com:CustomerIdentifier/com:BankID"/>
          </app:UnitID>
          <app:CIFNo>
            <xsl:value-of select="com:CustomerIdentifier/com:CustomerID"/>
          </app:CIFNo>
          <app:CustName>
            <xsl:value-of select="com:Person/com:PersonName/com:FullName"/>
          </app:CustName>
          <app:PrimaryID>
            <xsl:value-of select="com:Person/com:IdentityDocument/com:IdentityDocumentID"/>
          </app:PrimaryID>
          <app:HostSystem>FINN</app:HostSystem>
          <app:ContactPerson/>
          <app:RMName>
            <xsl:value-of select="com:Person/com:PersonName/com:ShortName"/>
          </app:RMName>
          <app:RMMailID/>
          <app:Address1>
            <xsl:value-of select="com:Address/com:LineOne"/>
          </app:Address1>
          <app:Address2>
            <xsl:value-of select="com:Address/com:LineTwo"/>
          </app:Address2>
          <app:Address3>
            <xsl:value-of select="com:Address/com:LineThree"/>
          </app:Address3>
          <app:Address4/>
          <app:CityTown>
            <xsl:value-of select="com:Address/com:CityName"/>
          </app:CityTown>
          <app:CountryCode>
            <xsl:value-of select="com:Address/com:CountyName"/>
          </app:CountryCode>
          <app:ZipCode>
            <xsl:value-of select="com:Address/com:PostalCode"/>
          </app:ZipCode>
          <app:FaxNo/>
          <!--xsl:for-each select="com:Phone">
            <xsl:if test="com:PhoneType/text()='PHONE'">
            <app:PhoneNo>
              <xsl:value-of select="com:CompleteNumber"/>
            </app:PhoneNo>
            </xsl:if>
            <xsl:if test="com:PhoneType/text()='CELL'">
             <app:CellNo>
            <xsl:value-of select="com:CompleteNumber"/>
          </app:CellNo>
            </xsl:if>
          </xsl:for-each-->
          <app:PhoneNo>
            <xsl:if test="com:Phone/com:PhoneType/text()='PHONE'">
              <xsl:value-of select="com:Phone/com:PhoneType[text()='PHONE']/../com:CompleteNumber"/>
            </xsl:if>
          </app:PhoneNo>
          <app:CellNo>
            <xsl:if test="com:Phone/com:PhoneType/text()='CELL'">
              <xsl:value-of select="com:Phone/com:PhoneType[text()='CELL']/../com:CompleteNumber"/>
            </xsl:if>
          </app:CellNo>
          <app:EmailID>
            <xsl:value-of select="com:Email/com:EmailAddress"/>
          </app:EmailID>
          <app:BranchCode>
            <xsl:value-of select="com:CustomerIdentifier/com:BranchID"/>
          </app:BranchCode>
          <app:PostingBranchCode/>
          <app:CustCategory/>
          <app:CustTaxCode/>
          <app:CustTaxID/>
          <app:Status>
            <xsl:value-of select="eo:CustomerStatus"/>
          </app:Status>
        </app:DataLine>
      </xsl:for-each>
      <app:TrailerLine>
        <app:LineIdentifier>T</app:LineIdentifier>
        <app:NumberOfRows>
          <xsl:value-of select="count (/eo:ESBMsg/eo:RqData/eo:Customer )"/>
        </app:NumberOfRows>
      </app:TrailerLine>
    </app:CustomerMasterFileInput>
  </xsl:template>
</xsl:stylesheet>
