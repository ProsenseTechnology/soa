<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Way4Test" soapui-version="5.0.0-m-SNAPSHOT" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" id="86c342fa-db94-46f7-88b3-50b3f5a8fba8" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UFX" type="rest" id="5f503fd4-aba4-4d48-8879-6b56372d864f" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://10.1.25.52:8011</con:endpoint><con:endpoint>http://10.1.9.154:10101</con:endpoint><con:endpoint>http://Deepaks-MacBook-Pro.local:8080/</con:endpoint><con:endpoint>http://localhost:8090</con:endpoint><con:endpoint>https://localhost:20000/FISERVLET/fihttp</con:endpoint></con:endpoints><con:resource name="Test" path="/way4gate/httpadapter" id="6e42fb11-8ded-464b-8a6b-a4f98fae5b9b"><con:settings/><con:parameters/><con:method name="Test" method="POST" id="6a7f95e6-1b4a-4281-9b0e-17c2644ef94a"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:fix="http://www.finacle.com/fixml">fix:FIXML</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=ISO-8859-1</con:mediaType><con:status>401</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:fix="http://www.finacle.com/fixml">fix:FIXML</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:xht="http://www.w3.org/1999/xhtml">xht:html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:fix="http://www.finacle.com/fixml">fix:FIXML</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>MidletRs</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element>UFXMsg</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="CardPayment" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:10101</con:endpoint><con:request><![CDATA[<UFXMsg direction="Rq" msg_type="Doc" scheme="WAY4Doc" version="2.0">
    <MsgId>AAA-555-333-EEE-23124172</MsgId>
    <Source app="WebPortal"/>
    <MsgData>
        <Doc>
            <TransType>
                <TransCode>
                    <MsgCode>PAYCARD</MsgCode>
                </TransCode>
            </TransType>
            <DocRefSet>
                <Parm>
                    <ParmCode>SRN</ParmCode>
                    <Value>TPUT00072</Value>
                </Parm>
            </DocRefSet>
           <LocalDt>2014-11-20 19:18:26</LocalDt>
            <Description>PAYMENT TO CREDIT CARD</Description>
            <Requestor>
                <ContractNumber>4203********1373</ContractNumber>
            </Requestor>
            <Source>
                <ContractNumber>068-TELLER</ContractNumber>
                <MemberId>0068</MemberId>
            </Source>
            <Transaction>
                <Currency>KES</Currency>
                <Amount>510.00</Amount>
                <Extra>
                   <Type>AddInfo</Type>
                    <Details>DOC_MODE=SMS;ONLINE_CREDIT_PENDING=Y;</Details>
                </Extra>
            </Transaction>
        </Doc>
    </MsgData>
</UFXMsg>]]></con:request><con:originalUri>http://10.1.25.52/way4gate/httpadapter</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Midlet" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://Mustaque-PC:8080/</con:endpoint><con:endpoint>http://localhost:9292</con:endpoint></con:endpoints><con:resource name="Test" path="/CCom/httpadapter"><con:settings/><con:parameters/><con:method name="Test" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>MidletRq</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>MidletRs</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>MidletRs</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="MobileWalletInquiry" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9291</con:endpoint><con:request><![CDATA[<MidletRq Mode="USSD">
   <Set>
      <String Name="RQ">DESTNAME</String>
      <String Name="PHONE">1254752880912</String>
      <String Name="DEST">0720739066</String>
   </Set>
</MidletRq>]]></con:request><con:originalUri>http://localhost/CCom/httpadapter</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="WalletTransfer" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9291</con:endpoint><con:request><![CDATA[<MidletRq Version='1.0' Mode='USSD'>
<request>
    <eazzycash>
      <amount>1500</amount>
      <sender>xxxxx</sender>
      <name>STEPHEN</name>
      <number>xxx</number>
      <telco>M-Pesa</telco>
      <rrn>xxxx</rrn>
    </eazzycash>
  </request>
</MidletRq>]]></con:request><con:originalUri>http://Mustaque-PC/CCom/httpadapter</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="EazzyCash" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://Mustaque-PC:8080/</con:endpoint><con:endpoint>http://localhost:9292</con:endpoint></con:endpoints><con:resource name="Test" path="/way4handler"><con:settings/><con:parameters/><con:method name="Test" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>request</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>response</con:element></con:representation><con:request name="WalletAPI" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9292</con:endpoint><con:request><![CDATA[<request>
    <eazzycash>
      <amount>1500</amount>
      <sender>xxxxx</sender>
      <name>STEPHEN</name>
      <number>xxx</number>
      <telco>M-Pesa</telco>
      <rrn>xxxx</rrn>
    </eazzycash>
  </request>]]></con:request><con:originalUri>http://localhost/way4handler</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Way4/DB/REST" type="rest" basePath="" definitionUrl="C:\JDeveloper\mywork\Jdev12\EQUITY_SVN_22APR2015\soa\trunk\ProviderComponents\ProviderService\Way4Prov\Adapter\db\WY4_DB_Adapter.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/JDeveloper/mywork/Jdev12/EQUITY_SVN_22APR2015/soa/trunk/ProviderComponents/ProviderService/Way4Prov/Adapter/db/WY4_DB_Adapter.wadl"><con:part><con:url>file:/C:/JDeveloper/mywork/Jdev12/EQUITY_SVN_22APR2015/soa/trunk/ProviderComponents/ProviderService/Way4Prov/Adapter/db/WY4_DB_Adapter.wadl</con:url><con:content><![CDATA[<application xmlns:soa="http://www.oracle.com/soa/rest" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:adp="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db" xmlns="http://wadl.dev.java.net/2009/02">
  <doc title="WY4_DB_Adapter">This is a rest service of WY4_DB_Adapter</doc>
  <grammars>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/" xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
      <import namespace="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db" schemaLocation="WY4_DB_Adapter.xsd"/>
    </schema>
  </grammars>
  <resources>
    <resource path="/queryCreditCardFeed">
      <method name="GET" soa:wsdlOperation="queryCreditCardFeed">
        <request>
          <param name="startDate" style="query" soa:expression="$msg.payload/adp:startDate" default="" type="xsd:string"/>
        </request>
        <response status="200">
          <representation mediaType="application/xml" element="cns:QueryCreditCardFeedOutputCollection" xmlns:cns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db"/>
          <representation mediaType="application/json" element="cns:QueryCreditCardFeedOutputCollection" xmlns:cns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db"/>
        </response>
      </method>
    </resource>
    <resource path="/queryCreditCardSummary">
      <method name="GET" soa:wsdlOperation="queryCreditCardSummary">
        <request>
          <param name="cardNumber" style="query" soa:expression="$msg.payload/adp:cardNumber" default="" type="xsd:string"/>
        </request>
        <response status="200">
          <representation mediaType="application/xml" element="cns:QueryCreditCardSummaryOutputCollection" xmlns:cns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db"/>
          <representation mediaType="application/json" element="cns:QueryCreditCardSummaryOutputCollection" xmlns:cns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db"/>
        </response>
      </method>
    </resource>
    <resource path="/queryCreditCardTransactionSummary">
      <method name="GET" soa:wsdlOperation="queryCreditCardTransactionSummary">
        <request>
          <param name="cardNumber" style="query" soa:expression="$msg.payload/adp:cardNumber" default="" type="xsd:string"/>
          <param name="startDate" style="query" soa:expression="$msg.payload/adp:startDate" default="" type="xsd:string"/>
          <param name="endDate" style="query" soa:expression="$msg.payload/adp:endDate" default="" type="xsd:string"/>
        </request>
        <response status="200">
          <representation mediaType="application/xml" element="cns:QueryCreditCardTransactionSummaryOutputCollection" xmlns:cns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db"/>
          <representation mediaType="application/json" element="cns:QueryCreditCardTransactionSummaryOutputCollection" xmlns:cns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db"/>
        </response>
      </method>
    </resource>
    <resource path="/queryCreditCardDetails">
      <method name="GET" soa:wsdlOperation="queryCreditCardDetails">
        <request>
          <param name="targetNumber" style="query" soa:expression="$msg.payload/adp:targetNumber" default="" type="xsd:string"/>
          <param name="contractNumber" style="query" soa:expression="$msg.payload/adp:contractNumber" default="" type="xsd:string"/>
          <param name="cardNumber" style="query" soa:expression="$msg.payload/adp:cardNumber" default="" type="xsd:string"/>
        </request>
        <response status="200">
          <representation mediaType="application/xml" element="cns:QueryCreditCardDetailsOutputCollection" xmlns:cns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db"/>
          <representation mediaType="application/json" element="cns:QueryCreditCardDetailsOutputCollection" xmlns:cns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:\C:\JDeveloper\mywork\Jdev12\EQUITY_SVN_22APR2015\soa\trunk\ProviderComponents\ProviderService\Way4Prov\Adapter\db\WY4_DB_Adapter.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--======================================================================-->
  <!--============= QueryCreditCardFeed =============-->
  <!--======================================================================-->
  <xs:element name="QueryCreditCardFeedInput" type="QueryCreditCardFeedInputType"/>
  <xs:complexType name="QueryCreditCardFeedInputType">
    <xs:sequence>
      <xs:element name="startDate" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="startDate1" type="xs:string" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="QueryCreditCardFeedOutputCollection" type="QueryCreditCardFeedOutputCollectionType"/>
  <xs:complexType name="QueryCreditCardFeedOutputCollectionType">
    <xs:sequence>
      <xs:element name="QueryCreditCardFeedOutput" type="QueryCreditCardFeedOutputType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QueryCreditCardFeedOutputType">
    <xs:sequence>
      <xs:element name="CardNo" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="BranchCode" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="CardHolderName" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="OpenDate" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="CustID" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="CardAccNo" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="CardType" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="ExpiryDate" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="CardStatus" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="Country" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="CardCategory" type="xs:string" minOccurs="0" nillable="true"/>
      <xs:element name="CardCcy" type="xs:string" minOccurs="0" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <!--======================================================================-->
  <!--============= QueryCreditCardSummary =============-->
  <!--======================================================================-->
  <xs:element name="QueryCreditCardSummaryInput" type="QueryCreditCardSummaryInputType"/>
  <xs:complexType name="QueryCreditCardSummaryInputType">
    <xs:sequence>
      <xs:element name="cardNumber" type="xs:string" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="QueryCreditCardSummaryOutputCollection" type="QueryCreditCardSummaryOutputCollectionType"/>
  <xs:complexType name="QueryCreditCardSummaryOutputCollectionType">
    <xs:sequence>
      <xs:element name="QueryCreditCardSummaryOutput" type="QueryCreditCardSummaryOutputType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QueryCreditCardSummaryOutputType">
    <xs:sequence>
      <xs:element name="LoyaltyAccount" type="xs:string" nillable="true"/>
      <xs:element name="CardNumber" type="xs:string" nillable="true"/>
      <xs:element name="ExpiryDate" type="xs:string" nillable="true"/>
      <xs:element name="CustomerName" type="xs:string" nillable="true"/>
      <xs:element name="PhoneNumber" type="xs:string" nillable="true"/>
      <xs:element name="EmailAddress" type="xs:string" nillable="true"/>
      <xs:element name="DateOpened" type="xs:dateTime" nillable="true"/>
      <xs:element name="Product" type="xs:string" nillable="true"/>
      <xs:element name="AvailableCredit" type="xs:decimal" nillable="true"/>
      <xs:element name="CreditLimit" type="xs:decimal" nillable="true"/>
      <xs:element name="BlockedAmount" type="xs:decimal" nillable="true"/>
      <xs:element name="UsedAmount" type="xs:decimal" nillable="true"/>
      <xs:element name="ContractCurrency" type="xs:string" nillable="true"/>
      <xs:element name="LastBillingDate" type="xs:dateTime" nillable="true"/>
      <xs:element name="NextBillingDate" type="xs:dateTime" nillable="true"/>
      <xs:element name="IsMain" type="xs:string" nillable="true"/>
      <xs:element name="Status" type="xs:string" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <!--======================================================================-->
  <!--============= QueryCreditCardTransactionSummary =============-->
  <!--======================================================================-->
  <xs:element name="QueryCreditCardTransactionSummaryInput" type="QueryCreditCardTransactionSummaryInputType"/>
  <xs:complexType name="QueryCreditCardTransactionSummaryInputType">
    <xs:sequence>
      <xs:element name="cardNumber" type="xs:string" nillable="true"/>
      <xs:element name="startDate" type="xs:string" nillable="true"/>
      <xs:element name="endDate" type="xs:string" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="QueryCreditCardTransactionSummaryOutputCollection" type="QueryCreditCardTransactionSummaryOutputCollectionType"/>
  <xs:complexType name="QueryCreditCardTransactionSummaryOutputCollectionType">
    <xs:sequence>
      <xs:element name="QueryCreditCardTransactionSummaryOutput" type="QueryCreditCardTransactionSummaryOutputType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QueryCreditCardTransactionSummaryOutputType">
    <xs:sequence>
      <xs:element name="CardID" type="xs:string" nillable="true"/>
      <xs:element name="TranDate" type="xs:string" nillable="true"/>
      <xs:element name="PostDate" type="xs:string" nillable="true"/>
      <xs:element name="TranDescription" type="xs:string" nillable="true"/>
      <xs:element name="Amount" type="xs:string" nillable="true"/>
      <xs:element name="TranRefNo" type="xs:string" nillable="true"/>
      <xs:element name="DebitCreditFlag" type="xs:string" nillable="true"/>
      <xs:element name="Currency" type="xs:string" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <!--======================================================================-->
  <!--============= QueryCreditCardDetails =============-->
  <!--======================================================================-->
  <xs:element name="QueryCreditCardDetailsInput" type="QueryCreditCardDetailsInputType"/>
  <xs:complexType name="QueryCreditCardDetailsInputType">
    <xs:sequence>
      <xs:element name="targetNumber" type="xs:string" nillable="true"/>
      <xs:element name="contractNumber" type="xs:string" nillable="true"/>
      <xs:element name="cardNumber" type="xs:string" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="QueryCreditCardDetailsOutputCollection" type="QueryCreditCardDetailsOutputCollectionType"/>
  <xs:complexType name="QueryCreditCardDetailsOutputCollectionType">
    <xs:sequence>
      <xs:element name="QueryCreditCardDetailsOutput" type="QueryCreditCardDetailsOutputType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QueryCreditCardDetailsOutputType">
    <xs:sequence>
      <xs:element name="CardID" type="xs:string" nillable="true"/>
      <xs:element name="CustomerId" type="xs:string" nillable="true"/>
      <xs:element name="RecoveryAccount" type="xs:string" nillable="true"/>
      <xs:element name="CreditCardNo" type="xs:string" nillable="true"/>
      <xs:element name="CardName" type="xs:string" nillable="true"/>
      <xs:element name="Product" type="xs:string" nillable="true"/>
      <xs:element name="CurrentBalance" type="xs:string" nillable="true"/>
      <xs:element name="UnbilledAmount" type="xs:string" nillable="true"/>
      <xs:element name="TotalCreditLimit" type="xs:string" nillable="true"/>
      <xs:element name="AvailableCreditLimit" type="xs:string" nillable="true"/>
      <xs:element name="AvailableCashLimit" type="xs:string" nillable="true"/>
      <xs:element name="CashLimit" type="xs:string" nillable="true"/>
      <xs:element name="TotalPaymentDue" type="xs:string" nillable="true"/>
      <xs:element name="ContractCurrency" type="xs:string" nillable="true"/>
      <xs:element name="LastBillingDate" type="xs:string" nillable="true"/>
      <xs:element name="NextStatementDate" type="xs:string" nillable="true"/>
      <xs:element name="CardType" type="xs:string" nillable="true"/>
      <xs:element name="CardStatus" type="xs:string" nillable="true"/>
      <xs:element name="TotalAmtDue" type="xs:string" nillable="true"/>
      <xs:element name="CardHolderName" type="xs:string" nillable="true"/>
      <xs:element name="CardAccountNumber" type="xs:string" nillable="true"/>
      <xs:element name="LastPaymentDate" type="xs:string" nillable="true"/>
      <xs:element name="LastPaymentAmount" type="xs:string" nillable="true"/>
      <xs:element name="CardIssuer" type="xs:string" nillable="true"/>
      <xs:element name="MinPaymentDue" type="xs:string" nillable="true"/>
      <xs:element name="PaymentDueDate" type="xs:string" nillable="true"/>
      <xs:element name="TotalDueAmount" type="xs:string" nillable="true"/>
      <xs:element name="PastDueAmount" type="xs:string" nillable="true"/>
      <xs:element name="LastStatementBalance" type="xs:string" nillable="true"/>
      <xs:element name="CardReissueFlag" type="xs:string" nillable="true"/>
      <xs:element name="RecoveryBank" type="xs:string" nillable="true"/>
      <xs:element name="AutoRecoveryOption" type="xs:string" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://Mustaque-PC:8080/</con:endpoint><con:endpoint>http://localhost:7001/Way4/DB/REST</con:endpoint></con:endpoints><con:resource name="/queryCreditCardFeed" path="/queryCreditCardFeed"><con:settings/><con:parameters/><con:method name="GET" method="GET"><con:settings/><con:parameters><con:parameter><con:name>startDate</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>startDate1</con:name><con:value>01-Jan-2014</con:value><con:style>QUERY</con:style><con:default>01-Jan-2014</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db">db:QueryCreditCardFeedOutputCollection</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db">db:QueryCreditCardFeedOutputCollection</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8000/Way4/DB/REST</con:endpoint><con:request/><con:originalUri>http://localhost/Finacle/DB/REST/queryCreditCardFeed</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="startDate" value="01-Jan-2014" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>startDate</con:entry><con:entry>startDate1</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="/queryCreditCardSummary" path="/queryCreditCardSummary"><con:settings/><con:parameters/><con:method name="GET" method="GET"><con:settings/><con:parameters><con:parameter><con:name>cardNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db">db:QueryCreditCardSummaryOutputCollection</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db">db:QueryCreditCardSummaryOutputCollection</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:7001/Way4/DB/REST</con:endpoint><con:request/><con:originalUri>http://localhost/Way4/DB/REST/queryCreditCardSummary</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="cardNumber" value="379996620015000" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="/queryCreditCardTransactionSummary" path="/queryCreditCardTransactionSummary"><con:settings/><con:parameters/><con:method name="GET" method="GET"><con:settings/><con:parameters><con:parameter><con:name>cardNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>startDate</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>endDate</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db">db:QueryCreditCardTransactionSummaryOutputCollection</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db">db:QueryCreditCardTransactionSummaryOutputCollection</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:7001/Way4/DB/REST</con:endpoint><con:request/><con:originalUri>http://localhost/Way4/DB/REST/queryCreditCardTransactionSummary</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="startDate" value="01-Jan-2014"/>
  <con:entry key="endDate" value="01-Feb-2015"/>
  <con:entry key="cardNumber" value="379996620015000"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="/queryCreditCardDetails" path="/queryCreditCardDetails"><con:settings/><con:parameters/><con:method name="GET" method="GET"><con:settings/><con:parameters><con:parameter><con:name>targetNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>contractNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>cardNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db">db:QueryCreditCardDetailsOutputCollection</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db">db:QueryCreditCardDetailsOutputCollection</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:7001/Way4/DB/REST</con:endpoint><con:request/><con:originalUri>http://localhost/Way4/DB/REST/queryCreditCardDetails</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="targetNumber" value="379996620015000"/>
  <con:entry key="contractNumber" value="379996620015000"/>
  <con:entry key="cardNumber" value="379996620015000"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:restMockService port="10101" path="/" host="localhost" name="UFXMock" docroot="" id="4b592c78-70c3-43d2-beb6-88a51a10e482"><con:settings/><con:properties/><con:restMockAction name="/way4gate/httpadapter" method="POST" resourcePath="/way4gate/httpadapter" id="86bb8835-7313-418e-8ebc-9fd87ddcb584"><con:settings/><con:defaultResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CardPaymentSuccess</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Examples showing how to match based on path, query param and header
// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeadeList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncodig Header List: " + acceptEncodingHeadeList

if( acceptEncodingHeadeList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}

*/
</con:dispatchPath><con:response name="CardPaymentResponse" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<UFXMsg direction="Rs" msg_type="Doc" resp_class="I" resp_code="0" scheme="WAY4Doc" version="2.0">
   <MsgId>AAA-555-333-EEE-23124172</MsgId>
   <Source app="WebPortal"/>
   <MsgData>
      <Doc>
         <TransType>
            <TransCode>
               <MsgCode>PAYCARD</MsgCode>
            </TransCode>
         </TransType>
         <DocRefSet>
            <Parm>
               <ParmCode>SRN</ParmCode>
               <Value>TPUT00072</Value>
            </Parm>
         </DocRefSet>
         <LocalDt>2014-11-20 19:18:26</LocalDt>
         <Description>PAYMENT TO CREDIT CARD</Description>
         <Requestor>
            <ContractNumber>4203********1373</ContractNumber>
         </Requestor>
         <Source>
            <ContractNumber>068-TELLER</ContractNumber>
            <MemberId>0068</MemberId>
         </Source>
         <Transaction>
            <Currency>KES</Currency>
            <Amount>510.00</Amount>
            <Extra>
               <Type>AddInfo</Type>
               <Details>DOC_MODE=SMS;ONLINE_CREDIT_PENDING=Y;</Details>
            </Extra>
         </Transaction>
         <Billing>
            <PhaseDate>2014-11-12</PhaseDate>
         </Billing>
         <Status>
            <RespClass>Information</RespClass>
            <RespCode>0</RespCode>
            <RespText>Successfully processed</RespText>
         </Status>
      </Doc>
   </MsgData>
</UFXMsg>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:restMockService port="9291" path="/" host="localhost" name="MidletMock" docroot=""><con:settings/><con:properties/><con:restMockAction name="/CCom/httpadapter" method="POST" resourcePath="/CCom/httpadapter"><con:settings/><con:defaultResponse>WalletTransferSuccess</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def req = new XmlSlurper().parseText(mockRequest.requestContent)

def eazzycash = req.request.eazzycash.name.toString()
def responseToUse = "";
log.info "eazzycash: "+eazzycash
if (eazzycash != "") {
    responseToUse = "WalletAPISuccess" 
}else  {
    responseToUse = "MobileWalletInquirySuccess" 
}
return responseToUse</con:dispatchPath><con:response name="MobileWalletInquirySuccess" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<MidletRs version="1.0" Mode="USSD">
   <Set>
      <String Name="RC">OK</String>
      <String Name="DEST">0170190151342</String>
      <String Name="DESTNAME">ISAIAH ISAIAH CHUMBA</String>
   </Set>
</MidletRs>]]></con:responseContent></con:response><con:response name="WalletTransferSuccess" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<response>
  <MsgId>0</MsgId>
  <eazzycashres>
      <status>OK</status>
  </eazzycashres>
</response>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:restMockService port="9292" path="/" host="Mustaque-PC" name="EazzyCashMock" docroot=""><con:settings/><con:properties/><con:restMockAction name="/way4handler" method="POST" resourcePath="/way4handler"><con:settings/><con:defaultResponse>WalletAPISuccess</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="WalletAPISuccess" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<response>
  <MsgId>0</MsgId>
  <eazzycashres>
      <status>OK</status>
  </eazzycashres>
</response>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:restMockService port="8000" path="/Way4/DB/REST" host="Mustaque-PC" name="Way4/DB/RESTMock" docroot=""><con:settings/><con:properties/><con:restMockAction name="/queryCreditCardFeed" method="GET" resourcePath="/queryCreditCardFeed"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<QueryCreditCardFeedOutputCollection xmlns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <QueryCreditCardFeedOutput>
      <BranchCode>30313741</BranchCode>
      <CardAccNo>0170190906245</CardAccNo>
      <CardCcy>379996*******5000</CardCcy>
      <CardNo>HENRY THUKU</CardNo>
      <CardType>068-AMEX Card Staff Green Main</CardType>
      <CustID>8898.97</CustID>
      <CardHolderName>-949</CardHolderName>
      <Country>10000</Country>
      <OpenDate>8898.97</OpenDate>
      <ExpiryDate>8898.97</ExpiryDate>
      <CardCategory>10000</CardCategory>
      <CardStatus>2050.03</CardStatus>
   </QueryCreditCardFeedOutput>
   <QueryCreditCardFeedOutput>
      <BranchCode>30313741</BranchCode>
      <CardAccNo>0170190906245</CardAccNo>
      <CardCcy>379996*******5000</CardCcy>
      <CardNo>HENRY THUKU</CardNo>
      <CardType>068-AMEX Card Staff Green Main</CardType>
      <CustID>8898.97</CustID>
      <CardHolderName>-949</CardHolderName>
      <Country>10000</Country>
      <OpenDate>8898.97</OpenDate>
      <ExpiryDate>8898.97</ExpiryDate>
      <CardCategory>10000</CardCategory>
      <CardStatus>2050.03</CardStatus>
   </QueryCreditCardFeedOutput>
</QueryCreditCardFeedOutputCollection>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="/queryCreditCardSummary" method="GET" resourcePath="/queryCreditCardSummary"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<QueryCreditCardSummaryOutputCollection xmlns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <QueryCreditCardSummaryOutput>
      <LoyaltyAccount>0000000011162887</LoyaltyAccount>
      <CardNumber>379996*******5000</CardNumber>
      <ExpiryDate>1709</ExpiryDate>
      <CustomerName>HENRY THUKU</CustomerName>
      <PhoneNumber>0763484858</PhoneNumber>
      <EmailAddress>henry.gakami@equitybank.co.ke</EmailAddress>
      <DateOpened>2014-09-26T00:00:00.000+05:30</DateOpened>
      <Product>068-AMEX Card Staff Green Main</Product>
      <AvailableCredit>8898.97</AvailableCredit>
      <CreditLimit>10000</CreditLimit>
      <BlockedAmount>-949</BlockedAmount>
      <UsedAmount>2050.03</UsedAmount>
      <ContractCurrency>KENYAN SHILLING</ContractCurrency>
      <LastBillingDate>2014-11-11T00:00:00.000+05:30</LastBillingDate>
      <NextBillingDate>2014-12-10T00:00:00.000+05:30</NextBillingDate>
      <IsMain>Y</IsMain>
      <Status>Ok</Status>
   </QueryCreditCardSummaryOutput>
</QueryCreditCardSummaryOutputCollection>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="/queryCreditCardTransactionSummary" method="GET" resourcePath="/queryCreditCardTransactionSummary"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<QueryCreditCardTransactionSummaryOutputCollection xmlns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>01/16/2015</TranDate>
      <PostDate>2014-11-12 00:00:00.0</PostDate>
      <TranDescription>MERCY WANGECHI GITARI</TranDescription>
      <Amount>1</Amount>
      <TranRefNo>501621333338</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>01/16/2015</TranDate>
      <PostDate>2014-11-12 00:00:00.0</PostDate>
      <TranDescription>E_COMMERCE</TranDescription>
      <Amount>5</Amount>
      <TranRefNo>501619333336</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/09/2014</TranDate>
      <PostDate>2014-11-09 00:00:00.0</PostDate>
      <TranDescription>TUSKYS IMARA TILL 21</TranDescription>
      <Amount>1,235</Amount>
      <TranRefNo>431301183295</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/06/2014</TranDate>
      <PostDate>2014-11-10 00:00:00.0</PostDate>
      <TranDescription>NAIROBI JAVA HOUSE</TranDescription>
      <Amount>980</Amount>
      <TranRefNo xsi:nil="true"/>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/06/2014</TranDate>
      <PostDate>2014-11-06 00:00:00.0</PostDate>
      <TranDescription>EBL TEST MERCHANT</TranDescription>
      <Amount>1</Amount>
      <TranRefNo>431001501195</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/06/2014</TranDate>
      <PostDate>2014-11-06 00:00:00.0</PostDate>
      <TranDescription>EBL TEST MERCHANT</TranDescription>
      <Amount>1</Amount>
      <TranRefNo>431001498853</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/06/2014</TranDate>
      <PostDate>2014-11-06 00:00:00.0</PostDate>
      <TranDescription>EBL TEST MERCHANT</TranDescription>
      <Amount>1</Amount>
      <TranRefNo>431001497894</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/06/2014</TranDate>
      <PostDate>2014-11-06 00:00:00.0</PostDate>
      <TranDescription>PAYMENT TO CARD</TranDescription>
      <Amount>7,122</Amount>
      <TranRefNo xsi:nil="true"/>
      <DebitCreditFlag>C</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/05/2014</TranDate>
      <PostDate>2014-11-05 00:00:00.0</PostDate>
      <TranDescription>EBL TEST MERCHANT</TranDescription>
      <Amount>1</Amount>
      <TranRefNo>430901342689</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/05/2014</TranDate>
      <PostDate>2014-11-05 00:00:00.0</PostDate>
      <TranDescription>EBL TEST MERCHANT</TranDescription>
      <Amount>1</Amount>
      <TranRefNo>430901340549</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>11/05/2014</TranDate>
      <PostDate>2014-11-05 00:00:00.0</PostDate>
      <TranDescription>EBL TEST MERCHANT</TranDescription>
      <Amount>1</Amount>
      <TranRefNo>430901300154</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>10/21/2014</TranDate>
      <PostDate>2014-10-28 00:00:00.0</PostDate>
      <TranDescription>LOYLOGIC INC KENYA</TranDescription>
      <Amount>798</Amount>
      <TranRefNo xsi:nil="true"/>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>10/15/2014</TranDate>
      <PostDate>2014-10-28 00:00:00.0</PostDate>
      <TranDescription>NAIROBI JAVA HOUSE- KMA</TranDescription>
      <Amount>200</Amount>
      <TranRefNo xsi:nil="true"/>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>10/11/2014</TranDate>
      <PostDate>2014-10-11 00:00:00.0</PostDate>
      <TranDescription>TUSKYS IMARA TILL 7</TranDescription>
      <Amount>1,930</Amount>
      <TranRefNo>428401703721</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>10/11/2014</TranDate>
      <PostDate>2014-10-28 00:00:00.0</PostDate>
      <TranDescription>NAIROBI JAVA HOUSE</TranDescription>
      <Amount>200</Amount>
      <TranRefNo xsi:nil="true"/>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>10/11/2014</TranDate>
      <PostDate>2014-10-11 00:00:00.0</PostDate>
      <TranDescription>TUMAINI SELF SERVICE LTD</TranDescription>
      <Amount>735</Amount>
      <TranRefNo>428401587713</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>10/10/2014</TranDate>
      <PostDate>2014-10-10 00:00:00.0</PostDate>
      <TranDescription>TUSKYS IMARA TILL 7</TranDescription>
      <Amount>1,082</Amount>
      <TranRefNo>428301223760</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>10/09/2014</TranDate>
      <PostDate>2014-10-28 00:00:00.0</PostDate>
      <TranDescription>AMAZON EU</TranDescription>
      <Amount>22</Amount>
      <TranRefNo xsi:nil="true"/>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>GBP</Currency>
   </QueryCreditCardTransactionSummaryOutput>
   <QueryCreditCardTransactionSummaryOutput>
      <CardID>379996*******000</CardID>
      <TranDate>10/02/2014</TranDate>
      <PostDate>2014-10-02 00:00:00.0</PostDate>
      <TranDescription>EBL TEST MERCHANT</TranDescription>
      <Amount>0</Amount>
      <TranRefNo>427501510597</TranRefNo>
      <DebitCreditFlag>D</DebitCreditFlag>
      <Currency>KES</Currency>
   </QueryCreditCardTransactionSummaryOutput>
</QueryCreditCardTransactionSummaryOutputCollection>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="/queryCreditCardDetails" method="GET" resourcePath="/queryCreditCardDetails"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<QueryCreditCardDetailsOutputCollection xmlns="http://xmlns.equitybank.co.ke/ESB/PS/Way4/Adapter/db" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <QueryCreditCardDetailsOutput>
      <CardID>30313741</CardID>
      <CustomerId xsi:nil="true"/>
      <RecoveryAccount>0170190906245</RecoveryAccount>
      <CreditCardNo>379996*******5000</CreditCardNo>
      <CardName>HENRY THUKU</CardName>
      <Product>068-AMEX Card Staff Green Main</Product>
      <CurrentBalance>8898.97</CurrentBalance>
      <UnbilledAmount>-949</UnbilledAmount>
      <TotalCreditLimit>10000</TotalCreditLimit>
      <AvailableCreditLimit>8898.97</AvailableCreditLimit>
      <AvailableCashLimit>8898.97</AvailableCashLimit>
      <CashLimit>10000</CashLimit>
      <TotalPaymentDue>2050.03</TotalPaymentDue>
      <ContractCurrency>KENYAN SHILLING</ContractCurrency>
      <LastBillingDate>2014-11-11 00:00:00.0</LastBillingDate>
      <NextStatementDate>2014-12-10 00:00:00.0</NextStatementDate>
      <CardType>M</CardType>
      <CardStatus>Ok</CardStatus>
      <TotalAmtDue>2050.03</TotalAmtDue>
      <CardHolderName>HENRY THUKU</CardHolderName>
      <CardAccountNumber>0170190906245</CardAccountNumber>
      <LastPaymentDate>2014-11-06 15:11:31.0</LastPaymentDate>
      <LastPaymentAmount>7122.32</LastPaymentAmount>
      <CardIssuer>AMEX</CardIssuer>
      <MinPaymentDue>-2242.03</MinPaymentDue>
      <PaymentDueDate>2014-11-25 00:00:00.0</PaymentDueDate>
      <TotalDueAmount>-2050.03</TotalDueAmount>
      <PastDueAmount>0</PastDueAmount>
      <LastStatementBalance>-2242.03</LastStatementBalance>
      <CardReissueFlag>N</CardReissueFlag>
      <RecoveryBank>0170190906245</RecoveryBank>
      <AutoRecoveryOption>00068</AutoRecoveryOption>
   </QueryCreditCardDetailsOutput>
   <QueryCreditCardDetailsOutput>
      <CardID>30313741</CardID>
      <CustomerId xsi:nil="true"/>
      <RecoveryAccount>0170190906245</RecoveryAccount>
      <CreditCardNo>379996*******5000</CreditCardNo>
      <CardName>HENRY THUKU</CardName>
      <Product>068-AMEX Card Staff Green Main</Product>
      <CurrentBalance>8898.97</CurrentBalance>
      <UnbilledAmount>-949</UnbilledAmount>
      <TotalCreditLimit>10000</TotalCreditLimit>
      <AvailableCreditLimit>8898.97</AvailableCreditLimit>
      <AvailableCashLimit>8898.97</AvailableCashLimit>
      <CashLimit>10000</CashLimit>
      <TotalPaymentDue>2050.03</TotalPaymentDue>
      <ContractCurrency>KENYAN SHILLING</ContractCurrency>
      <LastBillingDate>2014-11-11 00:00:00.0</LastBillingDate>
      <NextStatementDate>2014-12-10 00:00:00.0</NextStatementDate>
      <CardType>M</CardType>
      <CardStatus>Ok</CardStatus>
      <TotalAmtDue>2050.03</TotalAmtDue>
      <CardHolderName>HENRY THUKU</CardHolderName>
      <CardAccountNumber>0170190906245</CardAccountNumber>
      <LastPaymentDate>2014-11-06 15:11:31.0</LastPaymentDate>
      <LastPaymentAmount>7122.32</LastPaymentAmount>
      <CardIssuer>AMEX</CardIssuer>
      <MinPaymentDue>-2242.03</MinPaymentDue>
      <PaymentDueDate>2014-11-25 00:00:00.0</PaymentDueDate>
      <TotalDueAmount>-2050.03</TotalDueAmount>
      <PastDueAmount>0</PastDueAmount>
      <LastStatementBalance>-2242.03</LastStatementBalance>
      <CardReissueFlag>Y</CardReissueFlag>
      <RecoveryBank>0170190906245</RecoveryBank>
      <AutoRecoveryOption>00068</AutoRecoveryOption>
   </QueryCreditCardDetailsOutput>
</QueryCreditCardDetailsOutputCollection>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>