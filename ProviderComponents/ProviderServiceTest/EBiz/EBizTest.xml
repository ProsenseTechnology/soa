<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="EBizTest" resourceRoot="" soapui-version="5.0.0-m-SNAPSHOT" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="EBiz/DB/REST" type="rest" basePath="" definitionUrl="file:/C:/JDeveloper/mywork/Jdev12/EQUITY_SVN_22APR2015/soa/trunk/ProviderComponents/ProviderService/EBizProv/Adapter/db/EBZ_DB_Adapter.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://localhost:8002/Finacle/DB/REST</con:endpoint></con:endpoints><con:resource name="/queryProjectCost" path="/queryProjectCost"><con:settings/><con:parameters/><con:method name="GET" method="GET"><con:settings/><con:parameters><con:parameter><con:name>startDate</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>endDate</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/db">db:ProjectInfoCollection</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:db="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/db">db:ProjectInfoCollection</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9292/EBiz/DB/REST/Mock</con:endpoint><con:request/><con:originalUri>http://localhost/queryProjectCost</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="EBiz/Apps/REST" type="rest" basePath="" definitionUrl="C:\JDeveloper\mywork\Jdev12\EQUITY_SVN_22APR2015\soa\trunk\ProviderComponents\ProviderService\EBizProv\Adapter\apps\EBZ_Apps_Adapter.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://localhost:8002/</con:endpoint></con:endpoints><con:resource name="/createProject" path="/createProject"><con:settings/><con:parameters/><con:method name="GET" method="GET"><con:settings/><con:parameters><con:parameter><con:name>V_PROJECT_NUMBER</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>V_PROJECT_NAME</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>V_PROJECT_DESCRIPTION</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>V_PROJECT_TEMPLATE</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>V_START_DATE</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:dateTime</con:type><con:default/></con:parameter><con:parameter><con:name>V_ORG_NAME</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:apps="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/apps">apps:AppsStoredProcedureOutput</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:apps="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/apps">apps:AppsStoredProcedureOutput</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9292/EBiz/apps/REST/Mock</con:endpoint><con:request/><con:originalUri>http://localhost/createProject</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="/updateProject" path="/updateProject"><con:settings/><con:parameters/><con:method name="GET" method="GET"><con:settings/><con:parameters><con:parameter><con:name>nil</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:boolean</con:type><con:default/></con:parameter><con:parameter><con:name>V_PROJECT_LIST_ITEM.nil</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:boolean</con:type><con:default/></con:parameter><con:parameter><con:name>PROJECT_NUMBER</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>TRANS_ID</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:integer</con:type><con:default/></con:parameter><con:parameter><con:name>TRANS_DATE</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:date</con:type><con:default/></con:parameter><con:parameter><con:name>TARGET_SYSTEM</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:apps="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/apps">apps:AppsStoredProcedureOutput</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:apps="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/apps">apps:AppsStoredProcedureOutput</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9292/EBiz/apps/REST/Mock</con:endpoint><con:request/><con:originalUri>http://localhost/EBizProv/Apps/RESTMock/updateProject</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService port="9292" path="/EBizProv/DB/RESTMock" host="localhost" name="EBiz/DB/RESTMock" docroot=""><con:settings/><con:properties/><con:restMockAction name="/queryProjectCost" method="GET" resourcePath="/queryProjectCost"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<ProjectInfoCollection xmlns="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/db"
                       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ProjectInfo>
    <projectNumber>1234</projectNumber>
    <expenditureType>expenditureType1</expenditureType>
    <taskName>taskName1</taskName>
    <description>description1</description>
    <expenditureItemDate>2015-03-13</expenditureItemDate>
    <supplier>WILLIAM.AKOY</supplier>
    <transactionId>1</transactionId>
    <invoiceNum>1234</invoiceNum>
    <itemDescription>itemDescription</itemDescription>
    <transactionAmount>2902.01</transactionAmount>
    <transCurrCode>USD</transCurrCode>
    <accountedAmount>2901.01</accountedAmount>
    <projectCurrencyCode>USD</projectCurrencyCode>
    <projectAmount>2900.00</projectAmount>
    <poNumber>poNumber</poNumber>
  </ProjectInfo>
  <ProjectInfo>
    <projectNumber>1234</projectNumber>
    <expenditureType>expenditureType</expenditureType>
    <taskName>taskName</taskName>
    <description>description</description>
    <expenditureItemDate>2015-03-13</expenditureItemDate>
    <supplier>WILLIAM.AKOY</supplier>
    <transactionId>1</transactionId>
    <invoiceNum>4567</invoiceNum>
    <itemDescription>itemDescription</itemDescription>
    <transactionAmount>1902.00</transactionAmount>
    <transCurrCode>USD</transCurrCode>
    <accountedAmount>1901.00</accountedAmount>
    <projectCurrencyCode>USD</projectCurrencyCode>
    <projectAmount>1900.00</projectAmount>
    <poNumber>poNumber</poNumber>
  </ProjectInfo>
</ProjectInfoCollection>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:restMockService port="9292" path="/EBizProv/apps/RESTMock" host="localhost" name="EBiz/Apps/RESTMock" docroot=""><con:settings/><con:properties/><con:restMockAction name="/createProject" method="GET" resourcePath="/createProject"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<AppsStoredProcedureOutput 	xmlns="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/apps" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<V_RETURN_CODE>0</V_RETURN_CODE>
		<V_RETURN_MESSAGE>Failure</V_RETURN_MESSAGE>
</AppsStoredProcedureOutput>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="/updateProject" method="GET" resourcePath="/updateProject"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<AppsStoredProcedureOutput 	xmlns="http://xmlns.equitybank.co.ke/ESB/PS/EBiz/Adapter/apps" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<V_RETURN_CODE>0</V_RETURN_CODE>
		<V_RETURN_MESSAGE>Failure</V_RETURN_MESSAGE>
</AppsStoredProcedureOutput>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/></con:soapui-project>