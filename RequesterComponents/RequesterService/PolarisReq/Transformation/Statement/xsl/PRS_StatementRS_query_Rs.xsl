<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:v1="http://xmlns.equitybank.co.ke/ESB/RS/Polaris/Statement/V1"
                xmlns:oraxsl="http://www.oracle.v12/XSL/Transform/java"
                xmlns:DVMFunctions="http://www.oracle.v12/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:v13="http://xmlns.equitybank.co.ke/ESB/EO/Transactions/Statement/V1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:XrefFunctions="http://www.oracle.v12/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl v13 v1 oraxsl DVMFunctions BasicCredentialsUserFunction UUIDUserFunction IsUserInRoleFunction IsUserInGroupFunction XrefFunctions"
                xmlns:v12="http://xmlns.equitybank.co.ke/ESB/EO/Common/V1"
                xmlns:v11="http://xmlns.equitybank.co.ke/ESB/RS/Polaris/Common/V1"
                xmlns:ns0="http://www.oracle.com/XSL/Transform/java"
                xmlns:ns2="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:ns1="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../../../../ESBMetadata/ComponentLibrary/EnterpriseObjects/Transactions/Statement/V1/StatementEO.xsd"/>
        <oracle-xsl-mapper:rootElement name="ESBMsg"
                                       namespace="http://xmlns.equitybank.co.ke/ESB/EO/Transactions/Statement/V1"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../../../../ESBMetadata/ComponentLibrary/RequesterServices/Polaris/Statement/V1/StatementRO.xsd"/>
        <oracle-xsl-mapper:rootElement name="ESBMsg"
                                       namespace="http://xmlns.equitybank.co.ke/ESB/RS/Polaris/Statement/V1"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [TUE JUN 09 17:21:35 EAT 2015].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <v1:ESBMsg>
      <v11:MsgID>
        <xsl:value-of select="/v13:ESBMsg/v12:MsgID"/>
      </v11:MsgID>
      <v1:RsData>
        <v1:Statement>
          <xsl:if test="/v13:ESBMsg/v13:RsData/v13:Statement/v12:AccountIdentifier/v12:BankID">
            <v12:BankID>
              <xsl:value-of select="/v13:ESBMsg/v13:RsData/v13:Statement/v12:AccountIdentifier/v12:BankID"/>
            </v12:BankID>
          </xsl:if>
          <xsl:if test="/v13:ESBMsg/v13:RsData/v13:Statement/v12:AccountIdentifier/v12:AccountID">
            <v12:AccountID>
              <xsl:value-of select="/v13:ESBMsg/v13:RsData/v13:Statement/v12:AccountIdentifier/v12:AccountID"/>
            </v12:AccountID>
          </xsl:if>
          <xsl:if test="/v13:ESBMsg/v13:RsData/v13:Statement/v12:Balance">
            <v1:CurrentBalance>
              <v11:Value>
                <xsl:value-of select="/v13:ESBMsg/v13:RsData/v13:Statement/v12:Balance/v12:BalanceAmount"/>
              </v11:Value>
              <v11:CurrencyCode>
                <xsl:value-of select="/v13:ESBMsg/v13:RsData/v13:Statement/v12:Balance/v12:BalanceAmount/@currencyCode"/>
              </v11:CurrencyCode>
            </v1:CurrentBalance>
          </xsl:if>
          <xsl:if test="/v13:ESBMsg/v13:RsData/v13:Statement/v12:Transaction">
            <xsl:for-each select="/v13:ESBMsg/v13:RsData/v13:Statement/v12:Transaction">
              <v11:Transaction>
                <xsl:if test="/v13:ESBMsg/v13:RsData/v13:Statement/v12:CardIdentifier/v12:BankID">
                  <v12:BankID>
                    <xsl:value-of select="/v13:ESBMsg/v13:RsData/v13:Statement/v12:CardIdentifier/v12:BankID"/>
                  </v12:BankID>
                </xsl:if>
                <xsl:if test="/v13:ESBMsg/v13:RsData/v13:Statement/v12:CardIdentifier/v12:CardID">
                  <v12:CardNumber>
                    <xsl:value-of select="/v13:ESBMsg/v13:RsData/v13:Statement/v12:CardIdentifier/v12:CardID"/>
                  </v12:CardNumber>
                </xsl:if>
                <xsl:if test="v12:TransactionSerialNumber">
                  <v11:TransactionSerialNumber>
                    <xsl:value-of select="v12:TransactionSerialNumber"/>
                  </v11:TransactionSerialNumber>
                </xsl:if>
                <v11:TransactionDateTime>
                  <xsl:value-of select="concat(translate(substring-before(v12:TransactionDateTime,'T'),'-',''),'000000')"/>
                </v11:TransactionDateTime>
                <xsl:if test="v12:TransactionDescription">
                  <v11:TransactionDescription>
                    <xsl:value-of select="v12:TransactionDescription"/>
                  </v11:TransactionDescription>
                </xsl:if>
                <xsl:if test="v12:TransactionType">
                  <v11:TransactionType>
                    <xsl:value-of select="v12:TransactionType"/>
                  </v11:TransactionType>
                </xsl:if>
                <xsl:if test="v12:TransactionAmount">
                  <v11:TransactionAmount>
                    <v11:Value>
                      <xsl:value-of select="v12:TransactionAmount"/>
                    </v11:Value>
                  </v11:TransactionAmount>
                </xsl:if>
                <xsl:if test="v12:TransactionCategory">
                  <v11:TransactionCategory>
                    <xsl:value-of select="v12:TransactionCategory"/>
                  </v11:TransactionCategory>
                </xsl:if>
                <xsl:if test="v12:InstrumentReferenceNumber">
                  <v11:InstrumentReferenceNumber>
                    <xsl:value-of select="v12:InstrumentReferenceNumber"/>
                  </v11:InstrumentReferenceNumber>
                </xsl:if>
                <v11:PostedDateTime>
                  <xsl:value-of select="v12:PostedDateTime"/>
                </v11:PostedDateTime>
                <xsl:if test="v12:TransactionBalance">
                  <v11:TransactionBalance>
                    <v11:Value>
                      <xsl:value-of select="v12:TransactionBalance"/>
                    </v11:Value>
                    <v11:CurrencyCode>
                      <xsl:value-of select="v12:TransactionBalance/@currencyCode"/>
                    </v11:CurrencyCode>
                  </v11:TransactionBalance>
                </xsl:if>
                <xsl:if test="v12:TransactionID">
                  <v11:TransactionID>
                    <xsl:value-of select="v12:TransactionID"/>
                  </v11:TransactionID>
                </xsl:if>
                <v11:CurrencyCode>
                  <xsl:value-of select="v12:TransactionAmount/@currencyCode"/>
                </v11:CurrencyCode>
                <xsl:if test="v12:ValueDate">
                  <v11:ValueDate>
                    <xsl:value-of select="concat(substring(v12:ValueDate,1,4),substring(v12:ValueDate,6,2),substring(v12:ValueDate,9,2))"/>
                  </v11:ValueDate>
                </xsl:if>
              </v11:Transaction>
            </xsl:for-each>
          </xsl:if>
        </v1:Statement>
        <xsl:if test="/v13:ESBMsg/v13:RsData/v12:Status">
          <v12:Status>
            <xsl:choose>
              <xsl:when test="/v13:ESBMsg/v13:RsData/v12:Status/v12:Type='SUCCESS'">
                <v12:Code>ESB-00</v12:Code>
              </xsl:when>
              <xsl:otherwise>
                <v12:Code>ESB-100</v12:Code>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="/v13:ESBMsg/v13:RsData/v12:Status/v12:Type">
              <v12:Type>
                <xsl:value-of select="/v13:ESBMsg/v13:RsData/v12:Status/v12:Type"/>
              </v12:Type>
            </xsl:if>
            <xsl:if test="/v13:ESBMsg/v13:RsData/v12:Status/v12:Text">
              <v12:Text>
                <xsl:value-of select="/v13:ESBMsg/v13:RsData/v12:Status/v12:Text"/>
              </v12:Text>
            </xsl:if>
          </v12:Status>
        </xsl:if>
      </v1:RsData>
    </v1:ESBMsg>
  </xsl:template>
</xsl:stylesheet>