<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:v13="http://xmlns.equitybank.co.ke/ESB/EO/Instruments/Card/V1"
                xmlns:v1="http://xmlns.equitybank.co.ke/ESB/RS/Polaris/Card/V1"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl v13 v1 oraxsl DVMFunctions BasicCredentialsUserFunction UUIDUserFunction IsUserInRoleFunction IsUserInGroupFunction XrefFunctions"
                xmlns:v15="http://xmlns.equitybank.co.ke/ESB/EO/Accounts/Account/V1"
                xmlns:v12="http://xmlns.equitybank.co.ke/ESB/EO/Common/V1"
                xmlns:ns1="http://xmlns.equitybank.co.ke/ESB/EO/Resilience/Biometric/V1"
                xmlns:v14="http://xmlns.equitybank.co.ke/ESB/EO/Parties/Customer/V1"
                xmlns:v11="http://xmlns.equitybank.co.ke/ESB/RS/Polaris/Common/V1">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../../../../ESBMetadata/ComponentLibrary/EnterpriseObjects/Instruments/Card/V1/CardEO.xsd"/>
        <oracle-xsl-mapper:rootElement name="ESBMsg"
                                       namespace="http://xmlns.equitybank.co.ke/ESB/EO/Instruments/Card/V1"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../../../../ESBMetadata/ComponentLibrary/RequesterServices/Polaris/Card/V1/CardRO.xsd"/>
        <oracle-xsl-mapper:rootElement name="ESBMsg" namespace="http://xmlns.equitybank.co.ke/ESB/RS/Polaris/Card/V1"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [FRI JUN 12 14:16:30 EAT 2015].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <v1:ESBMsg>
      <v1:RsData>
        <xsl:choose>
          <xsl:when test="/v13:ESBMsg/v13:RsData/v13:Card">
            <xsl:for-each select="/v13:ESBMsg/v13:RsData/v13:Card">
              <v1:Card>
                <v12:BankID>54</v12:BankID>
                <v12:CardID>
                  <xsl:value-of select="v12:CardIdentifier/v12:CardID"/>
                </v12:CardID>
                <v12:CardNumber>
                  <xsl:value-of select="v12:CardIdentifier/v12:CardNumber"/>
                </v12:CardNumber>
                <xsl:if test="v14:Customer/v12:Person/v12:PersonName/v12:FullName">
                  <v1:FullName>
                    <xsl:value-of select="v14:Customer/v12:Person/v12:PersonName/v12:FullName"/>
                  </v1:FullName>
                </xsl:if>
                <xsl:if test="v12:CardIdentifier/v12:AccountCurrency='KENYAN SHILLING'">
                  <v12:AccountCurrency>KES</v12:AccountCurrency>
                </xsl:if>
                <xsl:if test="v12:CardIdentifier/v12:AccountCurrency !='KENYAN SHILLING'">
                  <v12:AccountCurrency>
                    <xsl:value-of select="v12:CardIdentifier/v12:AccountCurrency"/>
                  </v12:AccountCurrency>
                </xsl:if>
                <xsl:if test="v13:AvailableCredit">
                  <v1:AvailableCredit>
                    <v11:Value>
                      <xsl:value-of select="v13:AvailableCredit"/>
                    </v11:Value>
                  </v1:AvailableCredit>
                </xsl:if>
                <xsl:if test="v13:UsedAmount">
                  <v1:UsedAmount>
                    <v11:Value>
                      <xsl:value-of select="v13:UsedAmount"/>
                    </v11:Value>
                  </v1:UsedAmount>
                </xsl:if>
                <xsl:if test="v13:NextBillingDate">
                  <v1:NextBillingDate>
                    <xsl:value-of select="concat( substring(v13:NextBillingDate,1,4),substring(v13:NextBillingDate,6,2),substring(v13:NextBillingDate,9,2))"/>
                  </v1:NextBillingDate>
                </xsl:if>
                <xsl:if test="v13:LastBillingDate">
                  <v1:LastBillingDate>
                    <xsl:value-of select="concat( substring(v13:LastBillingDate,1,4),substring(v13:LastBillingDate,6,2),substring(v13:LastBillingDate,9,2))"/>
                  </v1:LastBillingDate>
                </xsl:if>
                <xsl:if test='starts-with (v12:CardIdentifier/v12:CardNumber, "37999" )'>
                  <v1:CardType>M</v1:CardType>
                </xsl:if>
                <xsl:if test='starts-with (v12:CardIdentifier/v12:CardNumber, "42034" )'>
                  <v1:CardType>A</v1:CardType>
                </xsl:if>
                <xsl:if test="v13:CardStatus">
                  <v1:CardStatus>
                    <xsl:value-of select="v13:CardStatus"/>
                  </v1:CardStatus>
                </xsl:if>
                <v1:CardSubType>
                  <xsl:value-of select="v13:CardSubType"/>
                </v1:CardSubType>
                <xsl:if test="v13:CardOwnership">
                  <v1:CardOwnership>
                    <xsl:value-of select="v13:CardOwnership"/>
                  </v1:CardOwnership>
                </xsl:if>
                <xsl:if test="v14:Customer/v12:Person/v12:PersonName/v12:FullName">
                  <v1:EmbossedName>
                    <xsl:value-of select="v14:Customer/v12:Person/v12:PersonName/v12:FullName"/>
                  </v1:EmbossedName>
                </xsl:if>
                <xsl:if test="v13:CreditLimit">
                  <v1:CreditLimit>
                    <v11:Value>
                      <xsl:value-of select="v13:CreditLimit"/>
                    </v11:Value>
                  </v1:CreditLimit>
                </xsl:if>
                <v1:CardExpiryDate>
                  <xsl:value-of select="concat(substring(v13:CardExpiryDate,3,4),substring(v13:CardExpiryDate,1,2))"/>
                </v1:CardExpiryDate>
              </v1:Card>
            </xsl:for-each>
            <xsl:if test="/v13:ESBMsg/v13:RsData/v12:Status">
              <v12:Status>
                <xsl:if test="/v13:ESBMsg/v13:RsData/v12:Status/v12:Code">
                  <v12:Code>
                    <xsl:value-of select="/v13:ESBMsg/v13:RsData/v12:Status/v12:Code"/>
                  </v12:Code>
                </xsl:if>
                <xsl:if test="/v13:ESBMsg/v13:RsData/v12:Status/v12:Type">
                  <v12:Type>
                    <xsl:value-of select="/v13:ESBMsg/v13:RsData/v12:Status/v12:Type"/>
                  </v12:Type>
                </xsl:if>
                <xsl:if test="/v13:ESBMsg/v13:RsData/v12:Status/v12:Text">
                  <v12:Text>
                    <xsl:value-of select="/v13:ESBMsg/v13:RsData/v12:Status/v12:Text"/>
                  </v12:Text>
                </xsl:if>
              </v12:Status>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <v12:Status>
              <v12:Code>ESB-100</v12:Code>
              <v12:Type>FAILURE</v12:Type>
              <v12:Text>FAILURE</v12:Text>
            </v12:Status>
          </xsl:otherwise>
        </xsl:choose>
      </v1:RsData>
    </v1:ESBMsg>
  </xsl:template>
</xsl:stylesheet>
